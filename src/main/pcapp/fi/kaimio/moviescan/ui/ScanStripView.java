/*
 * ScanStripView.java
 *
 * Created on 23. maaliskuuta 2008, 7:12
 */

package fi.kaimio.moviescan.ui;

import fi.kaimio.moviescan.*;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;

/**
 ScanStripView shows the whole scanned strip as a small iamge and allows 
 navigation to any frame in it.
 */
public class ScanStripView extends javax.swing.JPanel {
    
    /** Creates new form ScanStripView */
    public ScanStripView() {
        initComponents();
    }

    private ScanStrip strip;
    
    
    /** This method is called from within the constructor to
     initialize the form.
     WARNING: Do NOT modify this code. The content of this method is
     always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 523, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     Get the strip currently shown
     @return The current strip
     */
    public ScanStrip getStrip() {
        return strip;
    }

    /**
     Set the strip
     @param strip The strip to be shown
     */
    public void setStrip( ScanStrip strip ) {
        if ( strip != this.strip ) {
        this.strip = strip;
        }
        repaint();
    }
    
    /**
     Paint the strip.
     @param g
     */
    @Override
    public void paint( Graphics g ) {
        super.paint( g );
        if ( strip == null ) {
            return;
        }
        // First, calculate the scaling needed for the strip
        int compWidth = getWidth();
        int compHeight = getHeight();

        int stripWidth = strip.getStripImage().getWidth();
        int stripHeight = strip.getStripImage().getHeight();

        double scaleH = ((double) compWidth) / ((double) stripWidth);
        double scaleV = ((double) compHeight) / ((double) stripHeight);
        double scale = Math.min( scaleH, scaleV );

        Graphics2D g2 = (Graphics2D) ((Graphics2D) g).create();
        g2.setPaint( Color.BLACK );
        g2.fillRect( 0, 0, (int) (scale * stripWidth), (int) (scale * stripHeight) );

        // Draw the perforations

        // Dimensions of S8 perforation
        int perfHeight = (int) (200 * scale);
        int perfWidth = (int) (160 * scale);

        for ( int n = 0; n < strip.getPerforationCount(); n++ ) {
            Perforation p = strip.getPerforation( n );
            int perfX = (int) ((p.x - 140) * scale);
            int perfY = (int) ((p.y - 100) * scale);
            g2.setPaint( Color.WHITE );
            g2.fillRect( perfX, perfY, perfWidth, perfHeight );
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
